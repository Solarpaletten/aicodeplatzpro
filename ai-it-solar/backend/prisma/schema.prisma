generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  projects Project[]
  reviews  Review[]
  comments Comment[]
  
  @@map("users")
}

model Project {
  id          String  @id @default(cuid())
  name        String
  description String?
  githubUrl   String?
  language    String?
  isPrivate   Boolean @default(false)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId   String
  user     User      @relation(fields: [userId], references: [id])
  reviews  Review[]
  
  @@map("projects")
}

model Review {
  id            String      @id @default(cuid())
  title         String
  description   String?
  oldCode       String
  newCode       String
  language      String
  riskLevel     RiskLevel   @default(LOW)
  status        ReviewStatus @default(PENDING)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  projectId String
  project   Project   @relation(fields: [projectId], references: [id])
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  comments  Comment[]
  
  @@map("reviews")
}

model Comment {
  id       String @id @default(cuid())
  content  String
  lineNumber Int?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  reviewId String
  review   Review @relation(fields: [reviewId], references: [id])
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  
  @@map("comments")
}

enum RiskLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum ReviewStatus {
  PENDING
  IN_PROGRESS
  APPROVED
  REJECTED
}
